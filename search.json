[{"title":"Java介绍","url":"/2021/12/22/Java/","content":"前言：此篇文章包括Java的发展史、Java结构和JAVA的特性优势，发展史有过了解即可，Java的结构和特性优势要搞明白，为什么Java一直处于计算机语言的主流地位，Java与其他语言的区别在哪，这对我们以后的项目也有很大的好处。\nJava简史Java发明人James  Gosling\nSUN公司SUN公司美国SUN(Stanford University Network)公司在中国大陆的正式中文名为“太阳计算机系统（中国）有限公司”在台湾中文名为“升 阳电脑公司”。\nJava发明的缘由Java为什么被发明Green项目。应用环境：像电视盒这样的消费类电子产品要求： 语言本身是中立的，也就是跨平台        1996年Java第一次发布就引起了人们的极大兴趣。关注Java的人士不仅限于计算机出版界，  还有诸如《纽约时报》《华盛顿邮报》《商业周刊》这样的主流媒体。Java 是第一种也是唯一种在National Public Radio上占用了10分钟时间来进行介绍的程序设计语言，并且还得到了$100000000的风险投资基金。这些基金全部用来支持用这种特别的计算机语言开发的产品。重温那些令人兴奋的日子是很有意思的。我们将简要地介绍一下Java语言的发展历史：        Java的历史要追溯到1991年，由Patrick Naughton 及其伙伴James Gosling (一个全能的计算机奇才)带领的Sun公同的工程师小组想要设计一种小型的计算机语言，主要用于像有线电视转换盒这类的消费设备。由于这些消费设备的处理能力和内存都很有限，所以语言必须非常小且能够生成非常紧凑的代码。另外，由于不同的厂商会选择不同的中央处理器(CPU)，因此这种语言的关键是不能与任何特定的体系结构捆绑在一起。这个项目被命名为”Green”。        所有就要求有这样的一种代码： 代码短小、紧凑且与平台无关。但是，Sun公司的人都有UNIX的应用背景。因此，所开发的语言以C++为基础。 是Gosling率先创造了这个语言，把这种语言称为“Oak”(这么起名的原因大概是因为他非常喜欢自己办公室外的橡树)。Sun 公司的人后来发现Oak是一种已有的计算机语言的名字，于是，将其改名为Java。\n历程经历阶段1991年，James Gosling在SUN公司的工程师小组想要设计这样一种小型计算机语言。该语言主要用于像电视盒这样的消费类电子产品。另外，由于不同的厂商选择不同的CPU和操作系统，因此，要求该语言不能和特定的体系结构绑在一起，要求语言本身是中立的，也就是跨平台的。所以，将这个语言命名为“Green”，类似于绿色软件的意思。后来，改名为Oak，橡树的意思。改名后发现已经有一种语言叫这个名字了，再改名叫Java。Java语言发展到今天经历了一系列的过程：–1991年，SUN公司的Green项目，Oak–1995年，推出Java测试版–1996年，JDK1.0–1997年，JDK1.1–1998年，JDK1.2，大大改进了早期版本缺陷，是一个革命性的版本，更名为Java2。–2004年，J2SE 5.0 (1.5.0)  Tiger老虎 成为Java语言发展史上的又一里程碑。为了表示该版本的重要性，J2SE1.5更名为Java SE 5.0–2005年，Java的各种版本已经更名，以取消其中的数字”2”： J2ME更名为Java ME， J2SE更名为Java SE， J2EE更名为Java EE；–2006年，J2SE 6.0 (1.6.0)  Mustang野马–2009年，甲骨文(oracle)收购SUN，交易高达价格74亿–2011年，JavaSE7.0   Dolphin海豚–2014年，JavaSE8.0–2017年，JAVA 9.0–2018年3月，JAVA 10–2018年9月，JAVA 11–2019年3月，JAVA 12–2019年9月，JAVA 13–2020年3月，JAVA 14现在SUN公司已经被oracle公司收购，目前每半年更新一次java的版本。但是，企业中的主流仍然以7和8为主。对于初学者，应该以企业主流应用版本为核心进行学习，没有必须在此处追求最新版本。\n不同版本JDK说明JDK说明JDK Version 1.1   于1997-02-19发行。   引入的新特性包括：   引入JDBC（Java Database Connectivity）；   支持内部类；   引入Java Bean；   引入RMI（Remote Method Invocation）；   引入反射（仅用于内省）。J2SE Version 1.2   开发代号为Playground（操场），于1998-12-08发行。   引入的新特性包括：   引入集合（Collection）框架；   对字符串常量做内存映射；   引入JIT（Just In Time）编译器；   引入对打包的Java文件进行数字签名；   引入控制授权访问系统资源的策略工具；   引入JFC（Java Foundation Classes），包括Swing 1.0、拖放和Java 2D类库；   引入Java 插件；   在JDBC中引入可滚动结果集、BLOB、CLOB、批量更新和用户自定义类型；   在Applet中添加声音支持。J2SE Version 1.3  开发代号为Kestrel（红隼），于2000-05-08发行。   引入的新特性包括：   引入Java Sound API；   jar文件索引；   对Java的各个方面都做了大量优化和增强。J2SE Version 1.4   开发代号为Merlin（隼），于2004-02-06发行（首次在JCP下发行）。   引入的新特性包括:   XML处理；   Java打印服务；   引入Logging API；   引入Java Web Start；   引入JDBC 3.0 API；   引入断言；   引入Preferences API；   引入链式异常处理；   支持IPv6；   支持正则表达式；   引入Image I/O slot machine API。Java Version SE 5.0   开发代号为Tiger（老虎），于2004-09-30发行。   引入的新特性包括:   引入泛型；   增强循环，可以使用迭代方式；   自动装箱与自动拆箱；   类型安全的枚举；   可变参数；   静态引入；   元数据（注解）；   引入Instrumentation。Java Version SE 6   开发代号为Mustang（野马），于2006-12-11发行。   引入的新特性包括：   支持脚本语言；   引入JDBC 4.0 API；   引入Java Compiler API；   可插拔注解；   增加对Native PKI(Public Key Infrastructure)、Java GSS(Generic Security Service)、Kerberos和LDAP(Lightweight Directory Access   Protocol)的支持；   继承Web Services；   做了很多优化。Java Version SE 7   开发代号是Dolphin（海豚），于2011-07-28发行。   引入的新特性包括：   switch语句块中允许以字符串作为分支条件；   在创建泛型对象时应用类型推断；   在一个语句块中捕获多种异常；   支持动态语言；   支持try-with-resources；   引入Java NIO.2开发包；   数值类型可以用2进制字符串表示，并且可以在字符串表示中添加下划线；   钻石型语法；   null值的自动处理。Java Version SE 8   开发代号是Spider（蜘蛛），于2014-03-18发行。   支持 lambda支持；   增强日期与时间API的功能；   对垃圾回收的性能也进行了改进；   并且移除了permgen区。   Lambdas表达式与Functional接口   接口的默认与静态方法   方法引用   重复注解   更好的类型推测机制   扩展注解的支持\nJava体系结构JavaSEJavaSE（Java  Standard  Edition）：标准版，定位在个人计算机上的应用这个版本是Java平台的核心，它提供了非常丰富的API来开发一般个人计算机上的应用程序，包括用户界面接口AWT及Swing，网络功能与国际化、图像处理能力以及输入输出支持等。在上世纪90年代末互联网上大放异彩的Applet也属于这个版本。Applet后来为Flash取代，Flash即将被HTML5取代。\nJavaEEJavaEE（Java  Enterprise Edition）：企业版，定位在服务器端的应用JavaEE是JavaSE的扩展，增加了用于服务器开发的类库。如：JDBC是让程序员能直接在Java内使用的SQL的语法来访问数据库内的数据；Servlet能够延伸服务器的功能，通过请求-响应的模式来处理客户端的请求；JSP是一种可以将Java程序代码内嵌在网页内的技术；\nJavaMEJavaME（Java  Micro  Edition）：微型版，定位在消费性电子产品的应用上JavaME是JavaSE的内伸，包含J2SE的一部分核心类，也有自己的扩展类,增加了适合微小装置的类库：javax.microedition.io.*等。该版本针对资源有限的电子消费产品的需求精简核心类库，并提供了模块化的架构让不同类型产品能够随时增加支持的能力。\nJava特性和优势跨平台/可移植性这是Java的核心优势。Java在设计时就很注重移植和跨平台性。比如：Java的int永远都是32位。不像C++可能是16，32，可能是根据编译器厂商规定的变化。这样的话程序的移植就会非常麻烦。\n1.安全性Java适合于网络/分布式环境，为了达到这个目标，在安全性方面投入了很大的精力，使Java可以很容易构建防病毒，防篡改的系统。\n2.面向对象面向对象是一种程序设计技术，非常适合大型软件的设计和开发。由于C++为了照顾大量C语言使用者而兼容了C，使得自身仅仅成为了带类的C语言，多少影响了其面向对象的彻底性！Java则是完全的面向对象语言。\n3.简单性Java就是C++语法的简化版，我们也可以将Java称之为“C++-”。跟我念“C加加减”，指的就是将C++的一些内容去掉；比如：头文件，指针运算，结构，联合，操作符重载，虚基类等等。同时，由于语法基于C语言，因此学习起来完全不费力。\n4.高性能Java最初发展阶段，总是被人诟病“性能低”；客观上，高级语言运行效率总是低于低级语言的，这个无法避免。Java语言本身发展中通过虚拟机的优化提升了几十倍运行效率。比如，通过JIT(JUST IN TIME)即时编译技术提高运行效率。 将一些“热点”字节码编译成本地机器码，并将结果缓存起来，在需要的时候重新调用。这样的话，使Java程序的执行效率大大提高，某些代码甚至接待C++的效率。因此，Java低性能的短腿，已经被完全解决了。业界发展上，我们也看到很多C++应用转到Java开发，很多C++程序员转型为Java程序员。\n5.分布式Java是为Internet的分布式环境设计的，因为它能够处理TCP/IP协议。事实上，通过URL访问一个网络资源和访问本地文件是一样简单的。Java还支持远程方法调用(RMI,Remote Method Invocation)，使程序能够通过网络调用方法。\n6.多线程多线程的使用可以带来更好的交互响应和实时行为。 Java多线程的简单性是Java成为主流服务器端开发语言的主要原因之一。\n7.健壮性Java是一种健壮的语言，吸收了C/C++ 语言的优点，但去掉了其影响程序健壮性的部分（如：指针、内存的申请与释放等）。Java程序不可能造成计算机崩溃。即使Java程序也可能有错误。如果出现某种出乎意料之事，程序也不会崩溃，而是把该异常抛出，再通过异常处理机制加以处理。\n总结一句话：Java很好！但是，并不是说学习了java，以后所有的东西都要用java开发了：某些领域其他语言有更出色的表现，比如，Objective C和后来的Swift在iOS设备上就有着无可取代的地位。浏览器中的处理几乎完全由JavaScript掌控。Windows程序通常都用C++或C#编写。Java在服务器端编程和跨平台客户端应用领域则很有优势。只能说，不同语言之前，有各自的优势，主要看具体是要做什么项目，其实也是平分秋色的。\n","categories":["Java"],"tags":["Java"]},{"title":"Hello World","url":"/2021/12/21/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"博客简介","url":"/2021/12/22/%E7%AE%80%E4%BB%8B/","content":"本博客于大学开始制作，记录学习记录和学习过程遇到的问题和解决办法。博客设有分类和标签搜索功能，方便大家查找内容。如遇到问题，可在评论区留下你的问题和建议。谢谢大家阅读。\nThis blog was created at the university to record learning records and problems encountered in the learning process and solutions.The blog is equipped with classification and tag search functions to make it easy for everyone to find content.If you encounter problems, you can leave your questions and suggestions in the comment area.Thank you all for reading.\n","tags":["简介"]}]